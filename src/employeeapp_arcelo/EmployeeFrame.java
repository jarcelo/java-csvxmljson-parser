
package employeeapp_arcelo;

import business.Employee;
import business.EmployeeIO;
import java.awt.Color;
import java.lang.reflect.Method;
import javax.swing.*;
import java.util.*;
import javax.swing.filechooser.*;


public class EmployeeFrame extends javax.swing.JFrame
{
    String fileName;
    Map<Long, Employee> emp;
    Map<String, Employee> empByName;
    Map<String, JTextField> screenMap;
    Employee e;

    int loading = 0;
        
    String[] getMethods = {"getEmpNumber", "getFirstName", "getLastName",
        "getMiddleName", "getSuffix", "getAddress1", "getAddress2", "getCity",
        "getState", "getZip", "getPhone", "getGender", "getStatus", "getHireDate",
        "getTermDate", "getPayCode" };
    
    JTextField[] fields;
    
    EmployeeFrame frame;
    
    
    public EmployeeFrame()
    {
        initComponents();
        // center form
        this.setLocationRelativeTo(this);
        // Call method to disable radio buttons
        enableRadioButtons(false);
        // Call method for employee selection
        enableEmployeeSelection(false);
        
        addButton.setEnabled(false);
        deleteButton.setEnabled(false);
        clearButton.setEnabled(false);
        updateButton.setEnabled(false);
        saveButton.setEnabled(false);
        jComboBox1.setSelectedIndex(-1);
        
        // Make a array of employee textFields
        JTextField[] flds = {empNumberTextField, firstNameTextField, lastNameTextField, 
            middleNameTextField, suffixTextField, address1TextField, address2TextField, cityTextField,
            stateTextField, zipTextField, phoneTextField, genderTextField, statusTextField, hireDateTextField,
            termindateDateTextField, payCodeTextField
        };
        
        fields = flds;
        screenMap = new HashMap<>();
        for (int i = 0; i < getMethods.length; i++)
        {
            screenMap.put(getMethods[i], fields[i]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        forwardButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        address2TextField = new javax.swing.JTextField();
        address1TextField = new javax.swing.JTextField();
        cityTextField = new javax.swing.JTextField();
        zipTextField = new javax.swing.JTextField();
        empNumberTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        genderTextField = new javax.swing.JTextField();
        payCodeTextField = new javax.swing.JTextField();
        statusTextField = new javax.swing.JTextField();
        hireDateTextField = new javax.swing.JTextField();
        termindateDateTextField = new javax.swing.JTextField();
        middleNameTextField = new javax.swing.JTextField();
        suffixTextField = new javax.swing.JTextField();
        stateTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        rawHashRadioButton = new javax.swing.JRadioButton();
        treeMapRadioButton = new javax.swing.JRadioButton();
        mapWithKeyRadioButton = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadCSVMenuItem = new javax.swing.JMenuItem();
        loadXMLMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Data App");

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        forwardButton.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        forwardButton.setText("  Next >>");
        forwardButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                forwardButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        previousButton.setText("<<  Prev");
        previousButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                previousButtonActionPerformed(evt);
            }
        });

        statusLabel.setBackground(new java.awt.Color(0, 102, 102));
        statusLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Welcome! Please load a CSV or an XML file from the File Menu.");
        statusLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        address2TextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        address1TextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        cityTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        zipTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        empNumberTextField.setEditable(false);
        empNumberTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        lastNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lastNameTextField.setText("  ");
        lastNameTextField.setToolTipText("");

        firstNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        firstNameTextField.setText("  ");

        phoneTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        genderTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        payCodeTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        statusTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        hireDateTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        termindateDateTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        termindateDateTextField.setToolTipText("");

        middleNameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        middleNameTextField.setText("  ");

        suffixTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        suffixTextField.setText("  ");

        stateTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel3.setText("Emp Number");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel5.setText("First Name");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel6.setText("Middle Name");
        jLabel6.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel7.setText("Suffix");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel8.setText("Address");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel9.setText("City");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel10.setText("State");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel11.setText("Zip");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel12.setText("Phone");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel13.setText("Gender");

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel14.setText("Pay Code");

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel15.setText("Status");

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel16.setText("Hire Date");
        jLabel16.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel17.setText("Terminate Date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(12, 12, 12)
                        .addComponent(middleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suffixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(address1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                                .addComponent(address2TextField)
                                .addComponent(empNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(statusTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(phoneTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cityTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(hireDateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(genderTextField))))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(payCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(zipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(termindateDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(middleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(suffixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(address2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(zipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(payCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(hireDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(termindateDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(23, 23, 23))
        );

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                updateButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(rawHashRadioButton);
        rawHashRadioButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        rawHashRadioButton.setText("Raw HashMap w/EmpNo Key");
        rawHashRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rawHashRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(treeMapRadioButton);
        treeMapRadioButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        treeMapRadioButton.setText("TreeMap w/ EmpNo");
        treeMapRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                treeMapRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mapWithKeyRadioButton);
        mapWithKeyRadioButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        mapWithKeyRadioButton.setText("Map w/name Key (sorted)");
        mapWithKeyRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mapWithKeyRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rawHashRadioButton)
                    .addComponent(treeMapRadioButton)
                    .addComponent(mapWithKeyRadioButton))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rawHashRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(treeMapRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mapWithKeyRadioButton)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Employees:");

        jComboBox1.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(previousButton)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(forwardButton))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previousButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N

        loadCSVMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        loadCSVMenuItem.setText("Load CSV File");
        loadCSVMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loadCSVMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadCSVMenuItem);

        loadXMLMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        loadXMLMenuItem.setText("Load XML File");
        loadXMLMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loadXMLMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadXMLMenuItem);
        jMenu1.add(jSeparator1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadCSVMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loadCSVMenuItemActionPerformed
    {//GEN-HEADEREND:event_loadCSVMenuItemActionPerformed
        statusLabel.setText("");
        JFileChooser f = new JFileChooser(".");
        f.setDialogTitle("Select Employee File: ");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV file (*.csv)", "CSV");
        f.setFileFilter(filter);
        JDialog jd = new JDialog();
        int rval = f.showOpenDialog(jd);
        
        if (rval == JFileChooser.CANCEL_OPTION) {
            statusLabel.setText("Opening csv file canceled.");
            statusLabel.setForeground(Color.red);
        }
        
        else    
        {
            fileName = f.getSelectedFile().getAbsolutePath();
            emp = EmployeeIO.getEmployees(fileName);
            statusLabel.setText(String.valueOf(emp.size()) + " record(s) found. Select either raw hash map, "
                    + "tree map or map with name key to view an employee record.");
            
            // Call method to enable radio buttons
            enableRadioButtons(true);
            // Set emp number text field to read only
            empNumberTextField.setEditable(false);
        }
    }//GEN-LAST:event_loadCSVMenuItemActionPerformed

    private void rawHashRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rawHashRadioButtonActionPerformed
    {//GEN-HEADEREND:event_rawHashRadioButtonActionPerformed
        if (rawHashRadioButton.isSelected()) {
            cmbKeys_build();
            statusLabel.setText("Raw hash with empno key radio button selected.");
            enableEmployeeSelection(true);
        }
    }//GEN-LAST:event_rawHashRadioButtonActionPerformed

    private void treeMapRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_treeMapRadioButtonActionPerformed
    {//GEN-HEADEREND:event_treeMapRadioButtonActionPerformed
        if (treeMapRadioButton.isSelected()) {
            cmbKeys_build();
            statusLabel.setText("Tree map with EmpNo key radio button selected.");
            enableEmployeeSelection(true);
        }

    }//GEN-LAST:event_treeMapRadioButtonActionPerformed

    private void cmbKeys_build()
    {
        loading=1;
        jComboBox1.removeAllItems();
        if (rawHashRadioButton.isSelected())
        {
            Set<Long> keys = emp.keySet();
            ArrayList<Long> akeys = new ArrayList<>(keys);
            for (Long e:akeys)
            {
                jComboBox1.addItem(e);
            }
        }
        else if (treeMapRadioButton.isSelected())
        {
            TreeMap<Long,Employee> treemap=new TreeMap<>(emp);
            for (Map.Entry<Long,Employee> entry: treemap.entrySet())
            {
                Long k=entry.getKey();
                jComboBox1.addItem(k);
            }
        }
        else if (mapWithKeyRadioButton.isSelected())
        {
            for (Map.Entry<String,Employee> entry : empByName.entrySet())
            {
                String name=entry.getKey();
                jComboBox1.addItem(name);
            }
        }
        jComboBox1.setSelectedIndex(-1);
        for (JTextField f: fields)
        {
            f.setText("");
        }
        loading=0;
    }
    
    private void mapWithKeyRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mapWithKeyRadioButtonActionPerformed
    {//GEN-HEADEREND:event_mapWithKeyRadioButtonActionPerformed
        try 
        {
            if (mapWithKeyRadioButton.isSelected()) 
            {
                empByName = new TreeMap<>();
                for (Map.Entry<Long, Employee> entry: emp.entrySet()) {
                    Employee e = entry.getValue();
                    String name = "";
                    //Check if middle name is null
                    if (e.getMiddleName() == null || e.getMiddleName().isEmpty()) {
                        e.setMiddleName(" ");
                        name = e.getLastName() + ", " + e.getFirstName();
                    }
                    else
                    {
                        name = e.getLastName() + ", " + e.getFirstName() + " " +
                            e.getMiddleName();
                    }
                    empByName.put(name, e);
                }
                cmbKeys_build();
                enableEmployeeSelection(true);
                statusLabel.setText("Map with sorted name key radio button selected.");
            }
        }
        catch (Exception ex)
        {
            statusLabel.setText("Error: " + ex.getMessage());
            statusLabel.setForeground(Color.red);
        }
    }//GEN-LAST:event_mapWithKeyRadioButtonActionPerformed

    
    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_previousButtonActionPerformed
    {//GEN-HEADEREND:event_previousButtonActionPerformed
        if (!(jComboBox1.getSelectedIndex() <= 0)) {
            jComboBox1.setSelectedIndex(jComboBox1.getSelectedIndex() - 1);
            forwardButton.setEnabled(true);
        }
        else {
            statusLabel.setText("You have reached the first employee record on file.");
            previousButton.setEnabled(false);
            forwardButton.setEnabled(true);
        }
    }//GEN-LAST:event_previousButtonActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_forwardButtonActionPerformed
    {//GEN-HEADEREND:event_forwardButtonActionPerformed
        if (jComboBox1.getSelectedIndex()<jComboBox1.getItemCount()-1){
            jComboBox1.setSelectedIndex((jComboBox1.getSelectedIndex()+1));
            previousButton.setEnabled(true);
        }
        else {
            statusLabel.setText("You have reached the last employee record on file.");
            forwardButton.setEnabled(false);
            previousButton.setEnabled(true);
        }
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void loadXMLMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loadXMLMenuItemActionPerformed
    {//GEN-HEADEREND:event_loadXMLMenuItemActionPerformed
        // Load XML file
        statusLabel.setText("");
        JFileChooser f = new JFileChooser(".");
        f.setDialogTitle("Select Employee File ");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("XML file (*.xml)", "XML");
        f.setFileFilter(filter);
        JDialog jd = new JDialog();
        int rval = f.showOpenDialog(jd);
        
        if (rval == JFileChooser.CANCEL_OPTION) {
            statusLabel.setText("Open canceled.");
            statusLabel.setForeground(Color.orange);
        }
        
        else    
        {
            fileName = f.getSelectedFile().getAbsolutePath();
            emp = EmployeeIO.getEmployees(fileName);
            statusLabel.setText("No. of items: " + String.valueOf(emp.size()));
            // Enable radio buttons
            enableRadioButtons(true);
        }
    }//GEN-LAST:event_loadXMLMenuItemActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearButtonActionPerformed
    {//GEN-HEADEREND:event_clearButtonActionPerformed
        for (JTextField f: fields)
            f.setText("");

        jComboBox1.setSelectedIndex(-1);
        buttonGroup1.clearSelection();
        statusLabel.setText("");
        
        // Disable buttons
        clearButton.setEnabled(false);
        deleteButton.setEnabled(false);
        updateButton.setEnabled(false);
        // Enable add button i.e., user can add new data after form has been cleared
        addButton.setEnabled(true);
        // Make employee number textField editable
        empNumberTextField.setEditable(true);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem4ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem4ActionPerformed
        AboutDialog jd =new AboutDialog(this,rootPaneCheckingEnabled);
        jd.setLocationRelativeTo(this);
        jd.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jComboBox1ItemStateChanged
    {//GEN-HEADEREND:event_jComboBox1ItemStateChanged
        // Enable buttons
        addButton.setEnabled(false);
        deleteButton.setEnabled(true);
        clearButton.setEnabled(true);
        updateButton.setEnabled(true);
        saveButton.setEnabled(true);
        // Clear status label
        statusLabel.setText("");
        
        //Employee e;
        if (loading == 1) {
            return;
        }
        if (jComboBox1.getSelectedIndex() == -1) {
            statusLabel.setText("No record selected.");
            statusLabel.setForeground(Color.ORANGE);

        }
        else    
        {
            if (mapWithKeyRadioButton.isSelected()) {
                e = (Employee) empByName.get((String) jComboBox1.getSelectedItem());
            }
            else {
                e = (Employee) emp.get((Long) jComboBox1.getSelectedItem());
            }
            // Set status message
            String recordInfo = "You are viewing the record for ";
            DisplayValues(e);

            if(e.getMiddleName().equalsIgnoreCase("null") || e.getMiddleName().isEmpty()) {
                        //e.setMiddleName("");
                recordInfo += e.getLastName() + ", " + e.getFirstName(); 
            }
            else
            {
                recordInfo += e.getLastName() + ", " + e.getFirstName() + " " +
                    e.getMiddleName();
            }
            statusLabel.setText(recordInfo);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitButtonActionPerformed
    {//GEN-HEADEREND:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
    {//GEN-HEADEREND:event_deleteButtonActionPerformed
        if( jComboBox1.getSelectedIndex() == -1 ) {
            statusLabel.setText( "No Employee has been selected to delete" );
            return;
        }
        else {
            if(mapWithKeyRadioButton.isSelected() ) {
                long empNumber = Long.parseLong(empNumberTextField.getText());
                emp.remove(empNumber, e);
            } else {
                emp.remove( (Long) jComboBox1.getSelectedItem() );
            }
            cmbKeys_build();
            statusLabel.setText( "Employee has been deleted from map! Click SAVE button to apply change(s) in employee record." );
        }
        
        deleteButton.setEnabled(false);
        addButton.setEnabled(false);
        updateButton.setEnabled(false);
        clearButton.setEnabled(true);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addButtonActionPerformed
    {//GEN-HEADEREND:event_addButtonActionPerformed
        // Enable save changes button
        saveButton.setEnabled(true);
        
        Employee e = new Employee();
        
        for (String nm: getMethods) {
            
            JTextField f = screenMap.get(nm);
            if (f.getText().isEmpty()) {
                f.setText("");
            }
            
            String setMethod = "set" + nm.substring(3);

            switch (setMethod) {
                case "setEmpNumber":
                    long eNumber = Long.parseLong(f.getText());
                    if(eNumber<=0){throw new NumberFormatException();}
                    e.setEmpNumber(eNumber);
                    break;
                case ("setFirstName"):
                    e.setFirstName(f.getText());
                    break;
                case ("setLastName"):
                    e.setLastName(f.getText());
                    break;
                case ("setMiddleName"):
                    e.setMiddleName(f.getText());
                    break;
                case ("setSuffix"):
                    e.setSuffix(f.getText());
                    break;
                case ("setAddress1"):
                    e.setAddress1(f.getText());
                    break;
                case ("setAddress2"):
                    e.setAddress2(f.getText());
                    break;
                case ("setCity"):
                    e.setCity(f.getText());
                    break;
                case ("setState"):
                    e.setState(f.getText());
                    break;
                case ("setZip"):
                    e.setZip(f.getText());
                    break;
                case ("setPhone"):
                    try {
                        e.setPhone(Integer.parseInt(f.getText()));
                    }
                    catch(NumberFormatException ex) {
                        //ignore update text field on form is empty
                    }
                    break;
                case ("setGender"):
                    e.setGender(f.getText());
                    break;
                case ("setStatus"):
                    e.setStatus(f.getText());
                    break;
                case ("setHireDate"):
                    e.setHireDate(f.getText());
                    break;
                case ("setTermDate"):
                    e.setTermDate(f.getText());
                    break;
                case ("setPayCode"):
                    try {
                        e.setPayCode(Integer.parseInt(f.getText()));
                    }
                    catch(NumberFormatException ex) {
                        //ignore update text field on form is empty
                    }
                default:
                    break;
            }
        }
        
        emp.put((Long)e.getEmpNumber(), e);

        EmployeeIO.setEmps(fileName, emp);

        String recordInfo;
        if( middleNameTextField.getText().equals("") || middleNameTextField.getText().equalsIgnoreCase("null") ) {
            recordInfo = "The record for " + e.getFirstName()+ " " 
                    + e.getLastName() + " has been added! Click SAVE to apply changes.";
        } else {
            recordInfo = "The record for " + e.getFirstName() + " " + e.getMiddleName() +
                    " " + e.getLastName() + " has been added! Click SAVE to apply changes.";
        }
        statusLabel.setText(recordInfo);
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_updateButtonActionPerformed
    {//GEN-HEADEREND:event_updateButtonActionPerformed
        Employee e;
        if( loading == 1 )
            return;
        if( jComboBox1.getSelectedIndex() == -1 ) {
            statusLabel.setText( "Please select an employee record." );
        } else {
            if( mapWithKeyRadioButton.isSelected() ) {
                e = (Employee) empByName.get((String) jComboBox1.getSelectedItem());
            }
            else {
                e = (Employee) emp.get((Long) jComboBox1.getSelectedItem());
            }  
            e.setEmpNumber(Long.parseLong(empNumberTextField.getText()));
            e.setLastName(lastNameTextField.getText());
            e.setFirstName(firstNameTextField.getText());
            e.setMiddleName(middleNameTextField.getText());
            e.setSuffix(suffixTextField.getText());
            e.setAddress1(address1TextField.getText());
            e.setAddress2(address2TextField.getText());
            e.setCity(cityTextField.getText());
            e.setState(stateTextField.getText());
            e.setZip(zipTextField.getText());
            e.setPhone(Integer.parseInt(phoneTextField.getText()));
            e.setGender(genderTextField.getText());
            e.setStatus(statusTextField.getText());
            e.setHireDate(hireDateTextField.getText());
            e.setTermDate(termindateDateTextField.getText());
            e.setPayCode(Integer.parseInt(payCodeTextField.getText()));
            
            updateValues(e);
            DisplayValues(e);
            
            String recordInfo;
            if( middleNameTextField.getText().equals( "" ) ) {
                recordInfo = "The record for " + e.getFirstName()+ " " 
			+ e.getLastName() + " has been updated! Click SAVE to apply change(s).";
            } else {
                recordInfo = "The record for " + e.getFirstName() + " " + e.getMiddleName() +
                        " " + e.getLastName() + " has been updated! Click SAVE to apply change(s).";
            }
            statusLabel.setText(recordInfo);
        }
        saveButton.setEnabled(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveButtonActionPerformed
    {//GEN-HEADEREND:event_saveButtonActionPerformed
        // Disable save button after saving changes
        saveButton.setEnabled(false);
        clearButton.setEnabled(true);
        updateButton.setEnabled(false);
        // Refresh list
        buttonGroup1.clearSelection();
        cmbKeys_build();
        statusLabel.setText(EmployeeIO.setEmps(fileName, emp));
        ///
        enableEmployeeSelection(false);
        addButton.setEnabled(true);
        empNumberTextField.setEditable(true);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
 
    private void DisplayValues(Employee e)
    {
        for (JTextField f: fields)
            f.setText("");
          // use reflection
        Class empClass = e.getClass();
        Method[] methods = empClass.getMethods();
        try {
            for (Method m: methods) {
                if (screenMap.containsKey(m.getName())) {
                    JTextField f = screenMap.get(m.getName());
                    switch (m.getName()){
                        case "getEmpNumber" :
                            long x = (long) m.invoke(e, null);
                            f.setText(String.valueOf(x));
                            break;
                        case "getPhone":
                        case "getPayCode":
                            int y = (int)m.invoke(e, null);
                            f.setText(String.valueOf(y));
                            break;
                        default:                            
                            f.setText((String)m.invoke(e, null));
                            break;
                     }
                }
            }
        }
        catch(Exception ex) {
            ex.printStackTrace();
        }
    }
  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField address1TextField;
    private javax.swing.JTextField address2TextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField empNumberTextField;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton forwardButton;
    private javax.swing.JTextField genderTextField;
    private javax.swing.JTextField hireDateTextField;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JMenuItem loadCSVMenuItem;
    private javax.swing.JMenuItem loadXMLMenuItem;
    private javax.swing.JRadioButton mapWithKeyRadioButton;
    private javax.swing.JTextField middleNameTextField;
    private javax.swing.JTextField payCodeTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton previousButton;
    private javax.swing.JRadioButton rawHashRadioButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField statusTextField;
    private javax.swing.JTextField suffixTextField;
    private javax.swing.JTextField termindateDateTextField;
    private javax.swing.JRadioButton treeMapRadioButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField zipTextField;
    // End of variables declaration//GEN-END:variables

    
    private boolean updateValues(Employee e){
            Class empclass = e.getClass();
            Method m;
            boolean goodupdt;
            try{
                for(String nm : getMethods){
                    JTextField f = screenMap.get(nm); 
                    String setmethod = "set" + nm.substring(3);
                    
                    switch (setmethod){
                        case "setEmpNumber":
                            long x = Long.parseLong(f.getText());
                            if(x<=0){throw new NumberFormatException();}
                            m = empclass.getMethod(setmethod, new Class[]{Long.class});
                            m.invoke(e, x);
                            break;

                        case "setPhone":
                        case "setPayCode":
                            try{
                                int y = Integer.parseInt(f.getText());
                                m = empclass.getMethod(setmethod, new Class[] {Integer.class});
                            }catch(NumberFormatException ex) {
                                //ignore update text field on form is empty
                            }
                            break;
                            
                        default:
                            m = empclass.getMethod(setmethod, new Class[] {String.class});
                            m.invoke(emp, f.getText());
                            break;
                    }
                } 
                goodupdt = true;
            } catch (NumberFormatException ex){
              statusLabel.setText("");
              goodupdt = false;
            }catch(Exception ex){
                statusLabel.setText("Update error:"+ ex.getMessage());
                goodupdt = false;
            }
            return goodupdt;
        } 

    private void enableRadioButtons(boolean status)
    {
        rawHashRadioButton.setEnabled(status);
        treeMapRadioButton.setEnabled(status);
        mapWithKeyRadioButton.setEnabled(status);
    }

    private void enableEmployeeSelection(boolean status)
    {
        jComboBox1.setEnabled(status);
        previousButton.setEnabled(status);
        forwardButton.setEnabled(status);
    }
}
